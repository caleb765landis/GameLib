/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/Application.java to edit this template
 */
package gamelib;
import java.io.*; // Serializable
import java.util.Collection;
import javax.swing.*;

/**
 *
 * @author caleblandis
 */
public class GameLibFrame extends javax.swing.JFrame {
    
    // user data
    private static UserSaveData user = new UserSaveData();
    
    // full library lists
    private static DefaultListModel fullNintendoModel = new DefaultListModel();
    private static DefaultListModel fullPlaystationModel = new DefaultListModel();
    private static DefaultListModel fullXboxModel = new DefaultListModel();
    private static DefaultListModel fullPcModel = new DefaultListModel();
        
    // finished library lists
    private static DefaultListModel finishedNintendoModel = new DefaultListModel();
    private static DefaultListModel finishedPlaystationModel = new DefaultListModel();
    private static DefaultListModel finishedXboxModel = new DefaultListModel();
    private static DefaultListModel finishedPcModel = new DefaultListModel();

    // unfinished library lists
    private static DefaultListModel unfinishedNintendoModel = new DefaultListModel();
    private static DefaultListModel unfinishedPlaystationModel = new DefaultListModel();
    private static DefaultListModel unfinishedXboxModel = new DefaultListModel();
    private static DefaultListModel unfinishedPcModel = new DefaultListModel();

    // wish list library lists
    private static DefaultListModel wishNintendoModel = new DefaultListModel();
    private static DefaultListModel wishPlaystationModel = new DefaultListModel();
    private static DefaultListModel wishXboxModel = new DefaultListModel();
    private static DefaultListModel wishPcModel = new DefaultListModel();

    /**
     * Creates new form GameLibFrame
     */
    public GameLibFrame() {
        initComponents();
        
        loadUser();
        initLists();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listTabs = new javax.swing.JTabbedPane();
        fullLibraryContent = new javax.swing.JPanel();
        nintendoFullPanel = new javax.swing.JPanel();
        nintendoFullListPane = new javax.swing.JScrollPane();
        nintendoFullList = new javax.swing.JList<>();
        addNintendoFull = new javax.swing.JButton();
        editNintendoFull = new javax.swing.JButton();
        removeNintendoFull = new javax.swing.JButton();
        playstationFullPanel = new javax.swing.JPanel();
        playstationFullListPane = new javax.swing.JScrollPane();
        playstationFullList = new javax.swing.JList<>();
        addPlaystationFull = new javax.swing.JButton();
        editPlaystationFull = new javax.swing.JButton();
        removePlaystationFull = new javax.swing.JButton();
        xboxFullPanel = new javax.swing.JPanel();
        xboxFullListPane = new javax.swing.JScrollPane();
        xboxFullList = new javax.swing.JList<>();
        addXboxFull = new javax.swing.JButton();
        editXboxFull = new javax.swing.JButton();
        removeXboxFull = new javax.swing.JButton();
        pcFullPanel = new javax.swing.JPanel();
        pcFullListPane = new javax.swing.JScrollPane();
        pcFullList = new javax.swing.JList<>();
        addPCFull = new javax.swing.JButton();
        editPCFull = new javax.swing.JButton();
        removePCFull = new javax.swing.JButton();
        finishedContent = new javax.swing.JPanel();
        nintendoFinishedPanel = new javax.swing.JPanel();
        nintendoFinishedListPane = new javax.swing.JScrollPane();
        nintendoFinishedList = new javax.swing.JList<>();
        addNintendoFinished = new javax.swing.JButton();
        editNintendoFinished = new javax.swing.JButton();
        removeNintendoFinished = new javax.swing.JButton();
        playstationFinishedPanel = new javax.swing.JPanel();
        playstationFinishedListPane = new javax.swing.JScrollPane();
        playstationFinishedList = new javax.swing.JList<>();
        addPlaystationFinished = new javax.swing.JButton();
        editPlaystationFinished = new javax.swing.JButton();
        removePlaystationFinished = new javax.swing.JButton();
        xboxFinishedPanel = new javax.swing.JPanel();
        xboxFinishedListPane = new javax.swing.JScrollPane();
        xboxFinishedList = new javax.swing.JList<>();
        addXboxFinished = new javax.swing.JButton();
        editXboxFinished = new javax.swing.JButton();
        removeXboxFinished = new javax.swing.JButton();
        pcFinishedPanel = new javax.swing.JPanel();
        pcFinishedListPane = new javax.swing.JScrollPane();
        pcFinishedList = new javax.swing.JList<>();
        addPCFinished = new javax.swing.JButton();
        editPCFinished = new javax.swing.JButton();
        removePCFinished = new javax.swing.JButton();
        unfinishedContent = new javax.swing.JPanel();
        nintendoUnfinishedPanel = new javax.swing.JPanel();
        nintendoUnifnishedListPane = new javax.swing.JScrollPane();
        nintendoUnfinishedList = new javax.swing.JList<>();
        addNintendoUnfinished = new javax.swing.JButton();
        editNintendoUnfinished = new javax.swing.JButton();
        removeNintendoUninished = new javax.swing.JButton();
        playstationUnfinishedPanel = new javax.swing.JPanel();
        playstationUnfinishedListPane = new javax.swing.JScrollPane();
        playstationUnfinishedList = new javax.swing.JList<>();
        addPlaystationUnfinished = new javax.swing.JButton();
        editPlaystationUnfinished = new javax.swing.JButton();
        removePlaystationUnfinished = new javax.swing.JButton();
        xboxUnfinishedPanel = new javax.swing.JPanel();
        xboxUnfinishedListPane = new javax.swing.JScrollPane();
        xboxUnfinishedList = new javax.swing.JList<>();
        addXboxUnfinished = new javax.swing.JButton();
        editXboxUnfinished = new javax.swing.JButton();
        removeXboxUnfinished = new javax.swing.JButton();
        pcUnfinishedPanel = new javax.swing.JPanel();
        pcUnfinishedListPane = new javax.swing.JScrollPane();
        pcUnfinishedList = new javax.swing.JList<>();
        addPCUnfinished = new javax.swing.JButton();
        editPCUnfinished = new javax.swing.JButton();
        removePCUnfinished = new javax.swing.JButton();
        wishListContent = new javax.swing.JPanel();
        nintendoWishPanel = new javax.swing.JPanel();
        nintendoWishListPane = new javax.swing.JScrollPane();
        nintendoWishList = new javax.swing.JList<>();
        addNintendoWish = new javax.swing.JButton();
        editNintendoWish = new javax.swing.JButton();
        removeNintendoWish = new javax.swing.JButton();
        playstationWishPanel = new javax.swing.JPanel();
        playstationWishListPane = new javax.swing.JScrollPane();
        playstationWishList = new javax.swing.JList<>();
        addPlaystationWish = new javax.swing.JButton();
        editPlaystationWish = new javax.swing.JButton();
        removePlaystationWish = new javax.swing.JButton();
        xboxWishPanel = new javax.swing.JPanel();
        xboxWishListPane = new javax.swing.JScrollPane();
        xboxWishList = new javax.swing.JList<>();
        addXboxWish = new javax.swing.JButton();
        editXboxWish = new javax.swing.JButton();
        removeXboxWish = new javax.swing.JButton();
        pcWishPanel = new javax.swing.JPanel();
        pcWishListPane = new javax.swing.JScrollPane();
        pcWishList = new javax.swing.JList<>();
        addPCWish = new javax.swing.JButton();
        editPCWish = new javax.swing.JButton();
        removePCWish = new javax.swing.JButton();
        statsContent = new javax.swing.JPanel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GameLib - Manage your video game library all in one place.");

        listTabs.setName("Full Library"); // NOI18N

        nintendoFullPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nintendo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 16))); // NOI18N

        nintendoFullList.setSize(new java.awt.Dimension(48, 95));
        nintendoFullListPane.setViewportView(nintendoFullList);

        addNintendoFull.setText("Add");
        addNintendoFull.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNintendoFullActionPerformed(evt);
            }
        });

        editNintendoFull.setText("Edit");
        editNintendoFull.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editNintendoFullActionPerformed(evt);
            }
        });

        removeNintendoFull.setText("Remove");
        removeNintendoFull.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeNintendoFullActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout nintendoFullPanelLayout = new javax.swing.GroupLayout(nintendoFullPanel);
        nintendoFullPanel.setLayout(nintendoFullPanelLayout);
        nintendoFullPanelLayout.setHorizontalGroup(
            nintendoFullPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nintendoFullPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nintendoFullListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(nintendoFullPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(addNintendoFull, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editNintendoFull, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removeNintendoFull, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        nintendoFullPanelLayout.setVerticalGroup(
            nintendoFullPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nintendoFullPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(addNintendoFull, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editNintendoFull)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeNintendoFull)
                .addGap(43, 43, Short.MAX_VALUE))
            .addGroup(nintendoFullPanelLayout.createSequentialGroup()
                .addComponent(nintendoFullListPane)
                .addContainerGap())
        );

        playstationFullPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PlayStation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 16))); // NOI18N
        playstationFullPanel.setPreferredSize(new java.awt.Dimension(510, 194));

        playstationFullList.setSize(new java.awt.Dimension(161, 95));
        playstationFullListPane.setViewportView(playstationFullList);

        addPlaystationFull.setText("Add");
        addPlaystationFull.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlaystationFullActionPerformed(evt);
            }
        });

        editPlaystationFull.setText("Edit");
        editPlaystationFull.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPlaystationFullActionPerformed(evt);
            }
        });

        removePlaystationFull.setText("Remove");
        removePlaystationFull.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePlaystationFullActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout playstationFullPanelLayout = new javax.swing.GroupLayout(playstationFullPanel);
        playstationFullPanel.setLayout(playstationFullPanelLayout);
        playstationFullPanelLayout.setHorizontalGroup(
            playstationFullPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playstationFullPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(playstationFullListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(playstationFullPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addPlaystationFull, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editPlaystationFull, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removePlaystationFull, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        playstationFullPanelLayout.setVerticalGroup(
            playstationFullPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playstationFullPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(addPlaystationFull)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editPlaystationFull)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removePlaystationFull)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(playstationFullPanelLayout.createSequentialGroup()
                .addComponent(playstationFullListPane, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                .addContainerGap())
        );

        xboxFullPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Xbox", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 16))); // NOI18N
        xboxFullPanel.setPreferredSize(new java.awt.Dimension(510, 194));

        xboxFullListPane.setViewportView(xboxFullList);

        addXboxFull.setText("Add");
        addXboxFull.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addXboxFullActionPerformed(evt);
            }
        });

        editXboxFull.setText("Edit");
        editXboxFull.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editXboxFullActionPerformed(evt);
            }
        });

        removeXboxFull.setText("Remove");
        removeXboxFull.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeXboxFullActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout xboxFullPanelLayout = new javax.swing.GroupLayout(xboxFullPanel);
        xboxFullPanel.setLayout(xboxFullPanelLayout);
        xboxFullPanelLayout.setHorizontalGroup(
            xboxFullPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xboxFullPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(xboxFullListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(xboxFullPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addXboxFull, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editXboxFull, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removeXboxFull, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        xboxFullPanelLayout.setVerticalGroup(
            xboxFullPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xboxFullPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(addXboxFull)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editXboxFull)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeXboxFull)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, xboxFullPanelLayout.createSequentialGroup()
                .addComponent(xboxFullListPane, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                .addContainerGap())
        );

        pcFullPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PC", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 16))); // NOI18N
        pcFullPanel.setPreferredSize(new java.awt.Dimension(510, 194));

        pcFullListPane.setViewportView(pcFullList);

        addPCFull.setText("Add");
        addPCFull.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPCFullActionPerformed(evt);
            }
        });

        editPCFull.setText("Edit");
        editPCFull.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPCFullActionPerformed(evt);
            }
        });

        removePCFull.setText("Remove");
        removePCFull.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePCFullActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pcFullPanelLayout = new javax.swing.GroupLayout(pcFullPanel);
        pcFullPanel.setLayout(pcFullPanelLayout);
        pcFullPanelLayout.setHorizontalGroup(
            pcFullPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pcFullPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pcFullListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pcFullPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addPCFull, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editPCFull, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removePCFull, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pcFullPanelLayout.setVerticalGroup(
            pcFullPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pcFullPanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(addPCFull)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editPCFull)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removePCFull)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pcFullPanelLayout.createSequentialGroup()
                .addComponent(pcFullListPane, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout fullLibraryContentLayout = new javax.swing.GroupLayout(fullLibraryContent);
        fullLibraryContent.setLayout(fullLibraryContentLayout);
        fullLibraryContentLayout.setHorizontalGroup(
            fullLibraryContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fullLibraryContentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fullLibraryContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pcFullPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(xboxFullPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nintendoFullPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(playstationFullPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );
        fullLibraryContentLayout.setVerticalGroup(
            fullLibraryContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fullLibraryContentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nintendoFullPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(playstationFullPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(xboxFullPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pcFullPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126))
        );

        xboxFullPanel.getAccessibleContext().setAccessibleName("Xbox");

        listTabs.addTab("Full Library", fullLibraryContent);

        nintendoFinishedPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nintendo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 16))); // NOI18N

        nintendoFinishedList.setSize(new java.awt.Dimension(48, 95));
        nintendoFinishedListPane.setViewportView(nintendoFinishedList);

        addNintendoFinished.setText("Add");
        addNintendoFinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNintendoFinishedActionPerformed(evt);
            }
        });

        editNintendoFinished.setText("Edit");
        editNintendoFinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editNintendoFinishedActionPerformed(evt);
            }
        });

        removeNintendoFinished.setText("Remove");
        removeNintendoFinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeNintendoFinishedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout nintendoFinishedPanelLayout = new javax.swing.GroupLayout(nintendoFinishedPanel);
        nintendoFinishedPanel.setLayout(nintendoFinishedPanelLayout);
        nintendoFinishedPanelLayout.setHorizontalGroup(
            nintendoFinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nintendoFinishedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nintendoFinishedListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(nintendoFinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addNintendoFinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editNintendoFinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removeNintendoFinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        nintendoFinishedPanelLayout.setVerticalGroup(
            nintendoFinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nintendoFinishedPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(addNintendoFinished)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editNintendoFinished)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeNintendoFinished)
                .addContainerGap(55, Short.MAX_VALUE))
            .addGroup(nintendoFinishedPanelLayout.createSequentialGroup()
                .addComponent(nintendoFinishedListPane)
                .addContainerGap())
        );

        playstationFinishedPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PlayStation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 16))); // NOI18N

        playstationFinishedListPane.setViewportView(playstationFinishedList);

        addPlaystationFinished.setText("Add");
        addPlaystationFinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlaystationFinishedActionPerformed(evt);
            }
        });

        editPlaystationFinished.setText("Edit");
        editPlaystationFinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPlaystationFinishedActionPerformed(evt);
            }
        });

        removePlaystationFinished.setText("Remove");
        removePlaystationFinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePlaystationFinishedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout playstationFinishedPanelLayout = new javax.swing.GroupLayout(playstationFinishedPanel);
        playstationFinishedPanel.setLayout(playstationFinishedPanelLayout);
        playstationFinishedPanelLayout.setHorizontalGroup(
            playstationFinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playstationFinishedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(playstationFinishedListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(playstationFinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addPlaystationFinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editPlaystationFinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removePlaystationFinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        playstationFinishedPanelLayout.setVerticalGroup(
            playstationFinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playstationFinishedPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(addPlaystationFinished)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editPlaystationFinished)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removePlaystationFinished)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(playstationFinishedPanelLayout.createSequentialGroup()
                .addComponent(playstationFinishedListPane)
                .addContainerGap())
        );

        xboxFinishedPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Xbox", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 16))); // NOI18N

        xboxFinishedListPane.setViewportView(xboxFinishedList);

        addXboxFinished.setText("Add");
        addXboxFinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addXboxFinishedActionPerformed(evt);
            }
        });

        editXboxFinished.setText("Edit");
        editXboxFinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editXboxFinishedActionPerformed(evt);
            }
        });

        removeXboxFinished.setText("Remove");
        removeXboxFinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeXboxFinishedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout xboxFinishedPanelLayout = new javax.swing.GroupLayout(xboxFinishedPanel);
        xboxFinishedPanel.setLayout(xboxFinishedPanelLayout);
        xboxFinishedPanelLayout.setHorizontalGroup(
            xboxFinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xboxFinishedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(xboxFinishedListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(xboxFinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addXboxFinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editXboxFinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removeXboxFinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        xboxFinishedPanelLayout.setVerticalGroup(
            xboxFinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xboxFinishedPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(addXboxFinished)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editXboxFinished)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeXboxFinished)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(xboxFinishedPanelLayout.createSequentialGroup()
                .addComponent(xboxFinishedListPane)
                .addContainerGap())
        );

        pcFinishedPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PC", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 16))); // NOI18N

        pcFinishedListPane.setViewportView(pcFinishedList);

        addPCFinished.setText("Add");
        addPCFinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPCFinishedActionPerformed(evt);
            }
        });

        editPCFinished.setText("Edit");
        editPCFinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPCFinishedActionPerformed(evt);
            }
        });

        removePCFinished.setText("Remove");
        removePCFinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePCFinishedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pcFinishedPanelLayout = new javax.swing.GroupLayout(pcFinishedPanel);
        pcFinishedPanel.setLayout(pcFinishedPanelLayout);
        pcFinishedPanelLayout.setHorizontalGroup(
            pcFinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pcFinishedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pcFinishedListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pcFinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addPCFinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editPCFinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removePCFinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pcFinishedPanelLayout.setVerticalGroup(
            pcFinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pcFinishedPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(addPCFinished)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editPCFinished)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removePCFinished)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pcFinishedPanelLayout.createSequentialGroup()
                .addComponent(pcFinishedListPane)
                .addContainerGap())
        );

        javax.swing.GroupLayout finishedContentLayout = new javax.swing.GroupLayout(finishedContent);
        finishedContent.setLayout(finishedContentLayout);
        finishedContentLayout.setHorizontalGroup(
            finishedContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(finishedContentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(finishedContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nintendoFinishedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playstationFinishedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xboxFinishedPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(finishedContentLayout.createSequentialGroup()
                .addComponent(pcFinishedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        finishedContentLayout.setVerticalGroup(
            finishedContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(finishedContentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nintendoFinishedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(playstationFinishedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(xboxFinishedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pcFinishedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(239, Short.MAX_VALUE))
        );

        listTabs.addTab("Finished", finishedContent);

        nintendoUnfinishedPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nintendo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 16))); // NOI18N

        nintendoUnfinishedList.setSize(new java.awt.Dimension(48, 95));
        nintendoUnifnishedListPane.setViewportView(nintendoUnfinishedList);

        addNintendoUnfinished.setText("Add");
        addNintendoUnfinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNintendoUnfinishedActionPerformed(evt);
            }
        });

        editNintendoUnfinished.setText("Edit");
        editNintendoUnfinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editNintendoUnfinishedActionPerformed(evt);
            }
        });

        removeNintendoUninished.setText("Remove");
        removeNintendoUninished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeNintendoUninishedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout nintendoUnfinishedPanelLayout = new javax.swing.GroupLayout(nintendoUnfinishedPanel);
        nintendoUnfinishedPanel.setLayout(nintendoUnfinishedPanelLayout);
        nintendoUnfinishedPanelLayout.setHorizontalGroup(
            nintendoUnfinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nintendoUnfinishedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nintendoUnifnishedListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(nintendoUnfinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addNintendoUnfinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editNintendoUnfinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removeNintendoUninished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        nintendoUnfinishedPanelLayout.setVerticalGroup(
            nintendoUnfinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nintendoUnfinishedPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(addNintendoUnfinished)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editNintendoUnfinished)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeNintendoUninished)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(nintendoUnfinishedPanelLayout.createSequentialGroup()
                .addComponent(nintendoUnifnishedListPane, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                .addContainerGap())
        );

        playstationUnfinishedPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PlayStation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 16))); // NOI18N

        playstationUnfinishedListPane.setViewportView(playstationUnfinishedList);

        addPlaystationUnfinished.setText("Add");
        addPlaystationUnfinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlaystationUnfinishedActionPerformed(evt);
            }
        });

        editPlaystationUnfinished.setText("Edit");
        editPlaystationUnfinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPlaystationUnfinishedActionPerformed(evt);
            }
        });

        removePlaystationUnfinished.setText("Remove");
        removePlaystationUnfinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePlaystationUnfinishedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout playstationUnfinishedPanelLayout = new javax.swing.GroupLayout(playstationUnfinishedPanel);
        playstationUnfinishedPanel.setLayout(playstationUnfinishedPanelLayout);
        playstationUnfinishedPanelLayout.setHorizontalGroup(
            playstationUnfinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playstationUnfinishedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(playstationUnfinishedListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(playstationUnfinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addPlaystationUnfinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editPlaystationUnfinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removePlaystationUnfinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        playstationUnfinishedPanelLayout.setVerticalGroup(
            playstationUnfinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playstationUnfinishedPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(addPlaystationUnfinished)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editPlaystationUnfinished)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removePlaystationUnfinished)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(playstationUnfinishedPanelLayout.createSequentialGroup()
                .addComponent(playstationUnfinishedListPane)
                .addContainerGap())
        );

        xboxUnfinishedPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Xbox", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 16))); // NOI18N

        xboxUnfinishedListPane.setViewportView(xboxUnfinishedList);

        addXboxUnfinished.setText("Add");
        addXboxUnfinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addXboxUnfinishedActionPerformed(evt);
            }
        });

        editXboxUnfinished.setText("Edit");
        editXboxUnfinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editXboxUnfinishedActionPerformed(evt);
            }
        });

        removeXboxUnfinished.setText("Remove");
        removeXboxUnfinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeXboxUnfinishedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout xboxUnfinishedPanelLayout = new javax.swing.GroupLayout(xboxUnfinishedPanel);
        xboxUnfinishedPanel.setLayout(xboxUnfinishedPanelLayout);
        xboxUnfinishedPanelLayout.setHorizontalGroup(
            xboxUnfinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xboxUnfinishedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(xboxUnfinishedListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(xboxUnfinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addXboxUnfinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editXboxUnfinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removeXboxUnfinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        xboxUnfinishedPanelLayout.setVerticalGroup(
            xboxUnfinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xboxUnfinishedPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(addXboxUnfinished)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editXboxUnfinished)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeXboxUnfinished)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(xboxUnfinishedPanelLayout.createSequentialGroup()
                .addComponent(xboxUnfinishedListPane)
                .addContainerGap())
        );

        pcUnfinishedPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PC", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 16))); // NOI18N

        pcUnfinishedListPane.setViewportView(pcUnfinishedList);

        addPCUnfinished.setText("Add");
        addPCUnfinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPCUnfinishedActionPerformed(evt);
            }
        });

        editPCUnfinished.setText("Edit");
        editPCUnfinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPCUnfinishedActionPerformed(evt);
            }
        });

        removePCUnfinished.setText("Remove");
        removePCUnfinished.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePCUnfinishedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pcUnfinishedPanelLayout = new javax.swing.GroupLayout(pcUnfinishedPanel);
        pcUnfinishedPanel.setLayout(pcUnfinishedPanelLayout);
        pcUnfinishedPanelLayout.setHorizontalGroup(
            pcUnfinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pcUnfinishedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pcUnfinishedListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pcUnfinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addPCUnfinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editPCUnfinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removePCUnfinished, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pcUnfinishedPanelLayout.setVerticalGroup(
            pcUnfinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pcUnfinishedPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(addPCUnfinished)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editPCUnfinished)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removePCUnfinished)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pcUnfinishedPanelLayout.createSequentialGroup()
                .addComponent(pcUnfinishedListPane)
                .addContainerGap())
        );

        javax.swing.GroupLayout unfinishedContentLayout = new javax.swing.GroupLayout(unfinishedContent);
        unfinishedContent.setLayout(unfinishedContentLayout);
        unfinishedContentLayout.setHorizontalGroup(
            unfinishedContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(unfinishedContentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(unfinishedContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nintendoUnfinishedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playstationUnfinishedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(unfinishedContentLayout.createSequentialGroup()
                .addGroup(unfinishedContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pcUnfinishedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xboxUnfinishedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        unfinishedContentLayout.setVerticalGroup(
            unfinishedContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(unfinishedContentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nintendoUnfinishedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(playstationUnfinishedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(xboxUnfinishedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pcUnfinishedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(239, Short.MAX_VALUE))
        );

        listTabs.addTab("Unfinished", unfinishedContent);

        nintendoWishPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nintendo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 16))); // NOI18N

        nintendoWishList.setSize(new java.awt.Dimension(48, 95));
        nintendoWishListPane.setViewportView(nintendoWishList);

        addNintendoWish.setText("Add");
        addNintendoWish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNintendoWishActionPerformed(evt);
            }
        });

        editNintendoWish.setText("Edit");
        editNintendoWish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editNintendoWishActionPerformed(evt);
            }
        });

        removeNintendoWish.setText("Remove");
        removeNintendoWish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeNintendoWishActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout nintendoWishPanelLayout = new javax.swing.GroupLayout(nintendoWishPanel);
        nintendoWishPanel.setLayout(nintendoWishPanelLayout);
        nintendoWishPanelLayout.setHorizontalGroup(
            nintendoWishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nintendoWishPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nintendoWishListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(nintendoWishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addNintendoWish, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editNintendoWish, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removeNintendoWish, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        nintendoWishPanelLayout.setVerticalGroup(
            nintendoWishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(nintendoWishPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(addNintendoWish)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editNintendoWish)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeNintendoWish)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(nintendoWishPanelLayout.createSequentialGroup()
                .addComponent(nintendoWishListPane, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                .addContainerGap())
        );

        playstationWishPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PlayStation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 16))); // NOI18N

        playstationWishListPane.setViewportView(playstationWishList);

        addPlaystationWish.setText("Add");
        addPlaystationWish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPlaystationWishActionPerformed(evt);
            }
        });

        editPlaystationWish.setText("Edit");
        editPlaystationWish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPlaystationWishActionPerformed(evt);
            }
        });

        removePlaystationWish.setText("Remove");
        removePlaystationWish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePlaystationWishActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout playstationWishPanelLayout = new javax.swing.GroupLayout(playstationWishPanel);
        playstationWishPanel.setLayout(playstationWishPanelLayout);
        playstationWishPanelLayout.setHorizontalGroup(
            playstationWishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playstationWishPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(playstationWishListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(playstationWishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addPlaystationWish, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editPlaystationWish, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removePlaystationWish, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        playstationWishPanelLayout.setVerticalGroup(
            playstationWishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playstationWishPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(addPlaystationWish)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editPlaystationWish)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removePlaystationWish)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(playstationWishPanelLayout.createSequentialGroup()
                .addComponent(playstationWishListPane)
                .addContainerGap())
        );

        xboxWishPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Xbox", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 16))); // NOI18N

        xboxWishListPane.setViewportView(xboxWishList);

        addXboxWish.setText("Add");
        addXboxWish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addXboxWishActionPerformed(evt);
            }
        });

        editXboxWish.setText("Edit");
        editXboxWish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editXboxWishActionPerformed(evt);
            }
        });

        removeXboxWish.setText("Remove");
        removeXboxWish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeXboxWishActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout xboxWishPanelLayout = new javax.swing.GroupLayout(xboxWishPanel);
        xboxWishPanel.setLayout(xboxWishPanelLayout);
        xboxWishPanelLayout.setHorizontalGroup(
            xboxWishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xboxWishPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(xboxWishListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(xboxWishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addXboxWish, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editXboxWish, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removeXboxWish, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        xboxWishPanelLayout.setVerticalGroup(
            xboxWishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(xboxWishPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(addXboxWish)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editXboxWish)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removeXboxWish)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(xboxWishPanelLayout.createSequentialGroup()
                .addComponent(xboxWishListPane)
                .addContainerGap())
        );

        pcWishPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PC", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Helvetica Neue", 1, 16))); // NOI18N

        pcWishListPane.setViewportView(pcWishList);

        addPCWish.setText("Add");
        addPCWish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPCWishActionPerformed(evt);
            }
        });

        editPCWish.setText("Edit");
        editPCWish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPCWishActionPerformed(evt);
            }
        });

        removePCWish.setText("Remove");
        removePCWish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePCWishActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pcWishPanelLayout = new javax.swing.GroupLayout(pcWishPanel);
        pcWishPanel.setLayout(pcWishPanelLayout);
        pcWishPanelLayout.setHorizontalGroup(
            pcWishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pcWishPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pcWishListPane, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pcWishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addPCWish, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editPCWish, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removePCWish, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pcWishPanelLayout.setVerticalGroup(
            pcWishPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pcWishPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(addPCWish)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editPCWish)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(removePCWish)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pcWishPanelLayout.createSequentialGroup()
                .addComponent(pcWishListPane)
                .addContainerGap())
        );

        javax.swing.GroupLayout wishListContentLayout = new javax.swing.GroupLayout(wishListContent);
        wishListContent.setLayout(wishListContentLayout);
        wishListContentLayout.setHorizontalGroup(
            wishListContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wishListContentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(wishListContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nintendoWishPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playstationWishPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xboxWishPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(wishListContentLayout.createSequentialGroup()
                .addComponent(pcWishPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        wishListContentLayout.setVerticalGroup(
            wishListContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wishListContentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nintendoWishPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(playstationWishPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(xboxWishPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pcWishPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(239, Short.MAX_VALUE))
        );

        listTabs.addTab("Wish List", wishListContent);

        javax.swing.GroupLayout statsContentLayout = new javax.swing.GroupLayout(statsContent);
        statsContent.setLayout(statsContentLayout);
        statsContentLayout.setHorizontalGroup(
            statsContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        statsContentLayout.setVerticalGroup(
            statsContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        listTabs.addTab("Stats", statsContent);

        jScrollPane1.setViewportView(listTabs);
        listTabs.getAccessibleContext().setAccessibleName("Full Library");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 906, Short.MAX_VALUE)
        );

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // loads user data from user.dat 
    private static void loadUser() {
        try {
            FileInputStream fileIn = new FileInputStream("user.dat");
            ObjectInputStream objectIn = new ObjectInputStream(fileIn);
            user = (UserSaveData)objectIn.readObject();
        } catch (ClassNotFoundException c) {
            user = new UserSaveData();
            return;
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } // end try
    } // end loadUser()
    
    // saves user data to user.dat
    private static void saveUser() {
        try {
            FileOutputStream fileOut = new FileOutputStream("user.dat");
            ObjectOutputStream objectOut = new ObjectOutputStream(fileOut);
            objectOut.writeObject(user);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        } // end try
    } // end saveUser()
    
    // takes list items from user's save data and adds them to each list in gui
    private static void initLists() {
        
        // add user data to full lists
        fullNintendoModel.addAll(user.fullLists.nintendoList);
        fullPlaystationModel.addAll(user.fullLists.playstationList);
        fullXboxModel.addAll(user.fullLists.xboxList);
        fullPcModel.addAll(user.fullLists.pcList);
        
        // add user data to finished lists
        finishedNintendoModel.addAll(user.finishedLists.nintendoList);
        finishedPlaystationModel.addAll(user.finishedLists.playstationList);
        finishedXboxModel.addAll(user.finishedLists.xboxList);
        finishedPcModel.addAll(user.finishedLists.pcList);
        
        // add user data to unfinished lists
        unfinishedNintendoModel.addAll(user.unfinishedLists.nintendoList);
        unfinishedPlaystationModel.addAll(user.unfinishedLists.playstationList);
        unfinishedXboxModel.addAll(user.unfinishedLists.xboxList);
        unfinishedPcModel.addAll(user.unfinishedLists.pcList);
        
        // add user data to wish lists
        wishNintendoModel.addAll(user.wishLists.nintendoList);
        wishPlaystationModel.addAll(user.wishLists.playstationList);
        wishXboxModel.addAll(user.wishLists.xboxList);
        wishPcModel.addAll(user.wishLists.pcList);
        
        // set full library jList models
        nintendoFullList.setModel(fullNintendoModel);
        playstationFullList.setModel(fullPlaystationModel);
        xboxFullList.setModel(fullXboxModel);
        pcFullList.setModel(fullPcModel);
        
        // set finished library jList models
        nintendoFinishedList.setModel(finishedNintendoModel);
        playstationFinishedList.setModel(finishedPlaystationModel);
        xboxFinishedList.setModel(finishedXboxModel);
        pcFinishedList.setModel(finishedPcModel);
        
        // set unfinished library jList models
        nintendoUnfinishedList.setModel(unfinishedNintendoModel);
        playstationUnfinishedList.setModel(unfinishedPlaystationModel);
        xboxUnfinishedList.setModel(unfinishedXboxModel);
        pcUnfinishedList.setModel(unfinishedPcModel);
        
        // set wish list library jList models
        nintendoWishList.setModel(wishNintendoModel);
        playstationWishList.setModel(wishPlaystationModel);
        xboxWishList.setModel(wishXboxModel);
        pcWishList.setModel(wishPcModel);
        
        // set selection mode for jList models
        nintendoFullList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        playstationFullList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        xboxFullList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        pcFullList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }
    
    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        saveUser();
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void removeNintendoFullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeNintendoFullActionPerformed
        var selModel = nintendoFullList.getSelectionModel();

        int index = selModel.getMinSelectionIndex();

        if (index >= 0) {
            fullNintendoModel.remove(index);;
            user.fullLists.nintendoList.remove(index);
            
            saveUser();
        } // end if
    }//GEN-LAST:event_removeNintendoFullActionPerformed

    private void removePlaystationFullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePlaystationFullActionPerformed
        var selModel = playstationFullList.getSelectionModel();

        int index = selModel.getMinSelectionIndex();

        if (index >= 0) {
            fullPlaystationModel.remove(index);;
            user.fullLists.playstationList.remove(index);
            
            saveUser();
        } // end if
    }//GEN-LAST:event_removePlaystationFullActionPerformed

    private void removeXboxFullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeXboxFullActionPerformed
        var selModel = xboxFullList.getSelectionModel();

        int index = selModel.getMinSelectionIndex();

        if (index >= 0) {
            fullXboxModel.remove(index);;
            user.fullLists.xboxList.remove(index);
            
            saveUser();
        } // end if
    }//GEN-LAST:event_removeXboxFullActionPerformed

    private void removePCFullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePCFullActionPerformed
        var selModel = pcFullList.getSelectionModel();

        int index = selModel.getMinSelectionIndex();

        if (index >= 0) {
            fullPcModel.remove(index);;
            user.fullLists.pcList.remove(index);
            
            saveUser();
        } // end if
    }//GEN-LAST:event_removePCFullActionPerformed

    private void removeNintendoFinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeNintendoFinishedActionPerformed
        var selModel = nintendoFinishedList.getSelectionModel();

        int index = selModel.getMinSelectionIndex();

        if (index >= 0) {
            finishedNintendoModel.remove(index);;
            user.finishedLists.nintendoList.remove(index);
            
            saveUser();
        } // end if
    }//GEN-LAST:event_removeNintendoFinishedActionPerformed

    private void removePlaystationFinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePlaystationFinishedActionPerformed
        var selModel = playstationFinishedList.getSelectionModel();

        int index = selModel.getMinSelectionIndex();

        if (index >= 0) {
            finishedPlaystationModel.remove(index);;
            user.finishedLists.playstationList.remove(index);
            
            saveUser();
        } // end if
    }//GEN-LAST:event_removePlaystationFinishedActionPerformed

    private void removeXboxFinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeXboxFinishedActionPerformed
        var selModel = xboxFinishedList.getSelectionModel();

        int index = selModel.getMinSelectionIndex();

        if (index >= 0) {
            finishedXboxModel.remove(index);;
            user.finishedLists.xboxList.remove(index);
            
            saveUser();
        } // end if
    }//GEN-LAST:event_removeXboxFinishedActionPerformed

    private void removePCFinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePCFinishedActionPerformed
        var selModel = pcFinishedList.getSelectionModel();

        int index = selModel.getMinSelectionIndex();

        if (index >= 0) {
            finishedPcModel.remove(index);;
            user.finishedLists.pcList.remove(index);
            
            saveUser();
        } // end if
    }//GEN-LAST:event_removePCFinishedActionPerformed

    private void removeNintendoUninishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeNintendoUninishedActionPerformed
        var selModel = nintendoUnfinishedList.getSelectionModel();

        int index = selModel.getMinSelectionIndex();

        if (index >= 0) {
            unfinishedNintendoModel.remove(index);;
            user.unfinishedLists.nintendoList.remove(index);
            
            saveUser();
        } // end if
    }//GEN-LAST:event_removeNintendoUninishedActionPerformed

    private void removePlaystationUnfinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePlaystationUnfinishedActionPerformed
        var selModel = playstationUnfinishedList.getSelectionModel();

        int index = selModel.getMinSelectionIndex();

        if (index >= 0) {
            unfinishedPlaystationModel.remove(index);;
            user.unfinishedLists.playstationList.remove(index);
            
            saveUser();
        } // end if
    }//GEN-LAST:event_removePlaystationUnfinishedActionPerformed

    private void removeXboxUnfinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeXboxUnfinishedActionPerformed
        var selModel = xboxUnfinishedList.getSelectionModel();

        int index = selModel.getMinSelectionIndex();

        if (index >= 0) {
            unfinishedXboxModel.remove(index);;
            user.unfinishedLists.xboxList.remove(index);
            
            saveUser();
        } // end if
    }//GEN-LAST:event_removeXboxUnfinishedActionPerformed

    private void removePCUnfinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePCUnfinishedActionPerformed
        var selModel = pcUnfinishedList.getSelectionModel();

        int index = selModel.getMinSelectionIndex();

        if (index >= 0) {
            unfinishedPcModel.remove(index);;
            user.unfinishedLists.pcList.remove(index);
            
            saveUser();
        } // end if
    }//GEN-LAST:event_removePCUnfinishedActionPerformed

    private void removeNintendoWishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeNintendoWishActionPerformed
        var selModel = nintendoWishList.getSelectionModel();

        int index = selModel.getMinSelectionIndex();

        if (index >= 0) {
            wishNintendoModel.remove(index);;
            user.wishLists.nintendoList.remove(index);
            
            saveUser();
        } // end if
    }//GEN-LAST:event_removeNintendoWishActionPerformed

    private void removePlaystationWishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePlaystationWishActionPerformed
        var selModel = playstationWishList.getSelectionModel();

        int index = selModel.getMinSelectionIndex();

        if (index >= 0) {
            wishPlaystationModel.remove(index);;
            user.wishLists.playstationList.remove(index);
            
            saveUser();
        } // end if
    }//GEN-LAST:event_removePlaystationWishActionPerformed

    private void removeXboxWishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeXboxWishActionPerformed
        var selModel = xboxWishList.getSelectionModel();

        int index = selModel.getMinSelectionIndex();

        if (index >= 0) {
            wishXboxModel.remove(index);;
            user.wishLists.xboxList.remove(index);
            
            saveUser();
        } // end if
    }//GEN-LAST:event_removeXboxWishActionPerformed

    private void removePCWishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePCWishActionPerformed
        var selModel = pcWishList.getSelectionModel();

        int index = selModel.getMinSelectionIndex();

        if (index >= 0) {
            wishPcModel.remove(index);;
            user.wishLists.pcList.remove(index);
            
            saveUser();
        } // end if
    }//GEN-LAST:event_removePCWishActionPerformed

    private void addNintendoFullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNintendoFullActionPerformed
        var text = JOptionPane.showInputDialog("Add a new game.");
        String item;

        if (text != null) {
            item = text.trim();
        } else {
            return;
        }

        if (!item.isEmpty()) {

            fullNintendoModel.addElement(item);
            user.fullLists.nintendoList.add(item);

            saveUser();
        }
    }//GEN-LAST:event_addNintendoFullActionPerformed

    private void addPlaystationFullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlaystationFullActionPerformed
        var text = JOptionPane.showInputDialog("Add a new game.");
        String item;

        if (text != null) {
            item = text.trim();
        } else {
            return;
        }

        if (!item.isEmpty()) {

            fullPlaystationModel.addElement(item);
            user.fullLists.playstationList.add(item);

            saveUser();
        }
    }//GEN-LAST:event_addPlaystationFullActionPerformed

    private void addXboxFullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addXboxFullActionPerformed
        var text = JOptionPane.showInputDialog("Add a new game.");
        String item;

        if (text != null) {
            item = text.trim();
        } else {
            return;
        }

        if (!item.isEmpty()) {

            fullXboxModel.addElement(item);
            user.fullLists.xboxList.add(item);

            saveUser();
        }
    }//GEN-LAST:event_addXboxFullActionPerformed

    private void addPCFullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPCFullActionPerformed
        var text = JOptionPane.showInputDialog("Add a new game.");
        String item;

        if (text != null) {
            item = text.trim();
        } else {
            return;
        }

        if (!item.isEmpty()) {

            fullPcModel.addElement(item);
            user.fullLists.pcList.add(item);

            saveUser();
        }
    }//GEN-LAST:event_addPCFullActionPerformed

    private void addNintendoFinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNintendoFinishedActionPerformed
        var text = JOptionPane.showInputDialog("Add a new game.");
        String item;

        if (text != null) {
            item = text.trim();
        } else {
            return;
        }

        if (!item.isEmpty()) {

            finishedNintendoModel.addElement(item);
            user.finishedLists.nintendoList.add(item);

            saveUser();
        }
    }//GEN-LAST:event_addNintendoFinishedActionPerformed

    private void addPlaystationFinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlaystationFinishedActionPerformed
        var text = JOptionPane.showInputDialog("Add a new game.");
        String item;

        if (text != null) {
            item = text.trim();
        } else {
            return;
        }

        if (!item.isEmpty()) {

            finishedPlaystationModel.addElement(item);
            user.finishedLists.playstationList.add(item);

            saveUser();
        }
    }//GEN-LAST:event_addPlaystationFinishedActionPerformed

    private void addPCFinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPCFinishedActionPerformed
        var text = JOptionPane.showInputDialog("Add a new game.");
        String item;

        if (text != null) {
            item = text.trim();
        } else {
            return;
        }

        if (!item.isEmpty()) {

            finishedPcModel.addElement(item);
            user.finishedLists.pcList.add(item);

            saveUser();
        }
    }//GEN-LAST:event_addPCFinishedActionPerformed

    private void addXboxFinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addXboxFinishedActionPerformed
        var text = JOptionPane.showInputDialog("Add a new game.");
        String item;

        if (text != null) {
            item = text.trim();
        } else {
            return;
        }

        if (!item.isEmpty()) {

            finishedXboxModel.addElement(item);
            user.finishedLists.xboxList.add(item);

            saveUser();
        }
    }//GEN-LAST:event_addXboxFinishedActionPerformed

    private void addXboxUnfinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addXboxUnfinishedActionPerformed
        var text = JOptionPane.showInputDialog("Add a new game.");
        String item;

        if (text != null) {
            item = text.trim();
        } else {
            return;
        }

        if (!item.isEmpty()) {

            unfinishedXboxModel.addElement(item);
            user.unfinishedLists.xboxList.add(item);

            saveUser();
        }
    }//GEN-LAST:event_addXboxUnfinishedActionPerformed

    private void addPCUnfinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPCUnfinishedActionPerformed
        var text = JOptionPane.showInputDialog("Add a new game.");
        String item;

        if (text != null) {
            item = text.trim();
        } else {
            return;
        }

        if (!item.isEmpty()) {

            unfinishedPcModel.addElement(item);
            user.unfinishedLists.pcList.add(item);

            saveUser();
        }
    }//GEN-LAST:event_addPCUnfinishedActionPerformed

    private void addXboxWishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addXboxWishActionPerformed
        var text = JOptionPane.showInputDialog("Add a new game.");
        String item;

        if (text != null) {
            item = text.trim();
        } else {
            return;
        }

        if (!item.isEmpty()) {

            wishXboxModel.addElement(item);
            user.wishLists.xboxList.add(item);

            saveUser();
        }
    }//GEN-LAST:event_addXboxWishActionPerformed

    private void addPCWishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPCWishActionPerformed
        var text = JOptionPane.showInputDialog("Add a new game.");
        String item;

        if (text != null) {
            item = text.trim();
        } else {
            return;
        }

        if (!item.isEmpty()) {

            wishPcModel.addElement(item);
            user.wishLists.pcList.add(item);

            saveUser();
        }
    }//GEN-LAST:event_addPCWishActionPerformed

    private void addNintendoUnfinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNintendoUnfinishedActionPerformed
        var text = JOptionPane.showInputDialog("Add a new game.");
        String item;

        if (text != null) {
            item = text.trim();
        } else {
            return;
        }

        if (!item.isEmpty()) {

            unfinishedNintendoModel.addElement(item);
            user.unfinishedLists.nintendoList.add(item);

            saveUser();
        }
    }//GEN-LAST:event_addNintendoUnfinishedActionPerformed

    private void addPlaystationUnfinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlaystationUnfinishedActionPerformed
        var text = JOptionPane.showInputDialog("Add a new game.");
        String item;

        if (text != null) {
            item = text.trim();
        } else {
            return;
        }

        if (!item.isEmpty()) {

            unfinishedPlaystationModel.addElement(item);
            user.unfinishedLists.playstationList.add(item);

            saveUser();
        }
    }//GEN-LAST:event_addPlaystationUnfinishedActionPerformed

    private void addNintendoWishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNintendoWishActionPerformed
        var text = JOptionPane.showInputDialog("Add a new game.");
        String item;

        if (text != null) {
            item = text.trim();
        } else {
            return;
        }

        if (!item.isEmpty()) {

            wishNintendoModel.addElement(item);
            user.wishLists.nintendoList.add(item);

            saveUser();
        }
    }//GEN-LAST:event_addNintendoWishActionPerformed

    private void addPlaystationWishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPlaystationWishActionPerformed
        var text = JOptionPane.showInputDialog("Add a new game.");
        String item;

        if (text != null) {
            item = text.trim();
        } else {
            return;
        }

        if (!item.isEmpty()) {

            wishPlaystationModel.addElement(item);
            user.wishLists.playstationList.add(item);

            saveUser();
        }
    }//GEN-LAST:event_addPlaystationWishActionPerformed

    private void editNintendoFullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editNintendoFullActionPerformed
        var selModel = nintendoFullList.getSelectionModel();
        int index = selModel.getMinSelectionIndex();
        
        var model = fullNintendoModel;
        var list = user.fullLists.nintendoList;

        if (index == -1) {
            return;
        }

        var item = model.getElementAt(index);
        var text = JOptionPane.showInputDialog("Edit Game Title", item);
        String newItem;

        if (text != null) {
            newItem = text.trim();
        } else {
            return;
        }

        if (!newItem.isEmpty()) {

            model.remove(index);
            model.add(index, newItem);
            
            list.remove(index);
            list.add(newItem);
            
            saveUser();
        }
    }//GEN-LAST:event_editNintendoFullActionPerformed

    private void editPlaystationFullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPlaystationFullActionPerformed
        var selModel = playstationFullList.getSelectionModel();
        int index = selModel.getMinSelectionIndex();
        
        var model = fullPlaystationModel;
        var list = user.fullLists.playstationList;

        if (index == -1) {
            return;
        }

        var item = model.getElementAt(index);
        var text = JOptionPane.showInputDialog("Edit Game Title", item);
        String newItem;

        if (text != null) {
            newItem = text.trim();
        } else {
            return;
        }

        if (!newItem.isEmpty()) {

            model.remove(index);
            model.add(index, newItem);
            
            list.remove(index);
            list.add(newItem);
            
            saveUser();
        }
    }//GEN-LAST:event_editPlaystationFullActionPerformed

    private void editXboxFullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editXboxFullActionPerformed
        var selModel = xboxFullList.getSelectionModel();
        int index = selModel.getMinSelectionIndex();
        
        var model = fullXboxModel;
        var list = user.fullLists.xboxList;

        if (index == -1) {
            return;
        }

        var item = model.getElementAt(index);
        var text = JOptionPane.showInputDialog("Edit Game Title", item);
        String newItem;

        if (text != null) {
            newItem = text.trim();
        } else {
            return;
        }

        if (!newItem.isEmpty()) {

            model.remove(index);
            model.add(index, newItem);
            
            list.remove(index);
            list.add(newItem);
            
            saveUser();
        }
    }//GEN-LAST:event_editXboxFullActionPerformed

    private void editPCFullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPCFullActionPerformed
        var selModel = pcFullList.getSelectionModel();
        int index = selModel.getMinSelectionIndex();
        
        var model = fullPcModel;
        var list = user.fullLists.pcList;

        if (index == -1) {
            return;
        }

        var item = model.getElementAt(index);
        var text = JOptionPane.showInputDialog("Edit Game Title", item);
        String newItem;

        if (text != null) {
            newItem = text.trim();
        } else {
            return;
        }

        if (!newItem.isEmpty()) {

            model.remove(index);
            model.add(index, newItem);
            
            list.remove(index);
            list.add(newItem);
            
            saveUser();
        }
    }//GEN-LAST:event_editPCFullActionPerformed

    private void editNintendoFinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editNintendoFinishedActionPerformed
        var selModel = nintendoFinishedList.getSelectionModel();
        int index = selModel.getMinSelectionIndex();
        
        var model = finishedNintendoModel;
        var list = user.finishedLists.nintendoList;

        if (index == -1) {
            return;
        }

        var item = model.getElementAt(index);
        var text = JOptionPane.showInputDialog("Edit Game Title", item);
        String newItem;

        if (text != null) {
            newItem = text.trim();
        } else {
            return;
        }

        if (!newItem.isEmpty()) {

            model.remove(index);
            model.add(index, newItem);
            
            list.remove(index);
            list.add(newItem);
            
            saveUser();
        }
    }//GEN-LAST:event_editNintendoFinishedActionPerformed

    private void editPlaystationFinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPlaystationFinishedActionPerformed
        var selModel = playstationFinishedList.getSelectionModel();
        int index = selModel.getMinSelectionIndex();
        
        var model = finishedPlaystationModel;
        var list = user.finishedLists.playstationList;

        if (index == -1) {
            return;
        }

        var item = model.getElementAt(index);
        var text = JOptionPane.showInputDialog("Edit Game Title", item);
        String newItem;

        if (text != null) {
            newItem = text.trim();
        } else {
            return;
        }

        if (!newItem.isEmpty()) {

            model.remove(index);
            model.add(index, newItem);
            
            list.remove(index);
            list.add(newItem);
            
            saveUser();
        }
    }//GEN-LAST:event_editPlaystationFinishedActionPerformed

    private void editXboxFinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editXboxFinishedActionPerformed
        var selModel = xboxFinishedList.getSelectionModel();
        int index = selModel.getMinSelectionIndex();
        
        var model = finishedXboxModel;
        var list = user.finishedLists.xboxList;

        if (index == -1) {
            return;
        }

        var item = model.getElementAt(index);
        var text = JOptionPane.showInputDialog("Edit Game Title", item);
        String newItem;

        if (text != null) {
            newItem = text.trim();
        } else {
            return;
        }

        if (!newItem.isEmpty()) {

            model.remove(index);
            model.add(index, newItem);
            
            list.remove(index);
            list.add(newItem);
            
            saveUser();
        }
    }//GEN-LAST:event_editXboxFinishedActionPerformed

    private void editPCFinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPCFinishedActionPerformed
        var selModel = pcFinishedList.getSelectionModel();
        int index = selModel.getMinSelectionIndex();
        
        var model = finishedPcModel;
        var list = user.finishedLists.pcList;

        if (index == -1) {
            return;
        }

        var item = model.getElementAt(index);
        var text = JOptionPane.showInputDialog("Edit Game Title", item);
        String newItem;

        if (text != null) {
            newItem = text.trim();
        } else {
            return;
        }

        if (!newItem.isEmpty()) {

            model.remove(index);
            model.add(index, newItem);
            
            list.remove(index);
            list.add(newItem);
            
            saveUser();
        }
    }//GEN-LAST:event_editPCFinishedActionPerformed

    private void editNintendoUnfinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editNintendoUnfinishedActionPerformed
        var selModel = nintendoUnfinishedList.getSelectionModel();
        int index = selModel.getMinSelectionIndex();
        
        var model = unfinishedNintendoModel;
        var list = user.unfinishedLists.nintendoList;

        if (index == -1) {
            return;
        }

        var item = model.getElementAt(index);
        var text = JOptionPane.showInputDialog("Edit Game Title", item);
        String newItem;

        if (text != null) {
            newItem = text.trim();
        } else {
            return;
        }

        if (!newItem.isEmpty()) {

            model.remove(index);
            model.add(index, newItem);
            
            list.remove(index);
            list.add(newItem);
            
            saveUser();
        }
    }//GEN-LAST:event_editNintendoUnfinishedActionPerformed

    private void editPlaystationUnfinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPlaystationUnfinishedActionPerformed
        var selModel = playstationUnfinishedList.getSelectionModel();
        int index = selModel.getMinSelectionIndex();
        
        var model = unfinishedPlaystationModel;
        var list = user.unfinishedLists.playstationList;

        if (index == -1) {
            return;
        }

        var item = model.getElementAt(index);
        var text = JOptionPane.showInputDialog("Edit Game Title", item);
        String newItem;

        if (text != null) {
            newItem = text.trim();
        } else {
            return;
        }

        if (!newItem.isEmpty()) {

            model.remove(index);
            model.add(index, newItem);
            
            list.remove(index);
            list.add(newItem);
            
            saveUser();
        }
    }//GEN-LAST:event_editPlaystationUnfinishedActionPerformed

    private void editXboxUnfinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editXboxUnfinishedActionPerformed
        var selModel = xboxUnfinishedList.getSelectionModel();
        int index = selModel.getMinSelectionIndex();
        
        var model = unfinishedXboxModel;
        var list = user.unfinishedLists.xboxList;

        if (index == -1) {
            return;
        }

        var item = model.getElementAt(index);
        var text = JOptionPane.showInputDialog("Edit Game Title", item);
        String newItem;

        if (text != null) {
            newItem = text.trim();
        } else {
            return;
        }

        if (!newItem.isEmpty()) {

            model.remove(index);
            model.add(index, newItem);
            
            list.remove(index);
            list.add(newItem);
            
            saveUser();
        }
    }//GEN-LAST:event_editXboxUnfinishedActionPerformed

    private void editPCUnfinishedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPCUnfinishedActionPerformed
       var selModel = pcUnfinishedList.getSelectionModel();
        int index = selModel.getMinSelectionIndex();
        
        var model = unfinishedPcModel;
        var list = user.unfinishedLists.pcList;

        if (index == -1) {
            return;
        }

        var item = model.getElementAt(index);
        var text = JOptionPane.showInputDialog("Edit Game Title", item);
        String newItem;

        if (text != null) {
            newItem = text.trim();
        } else {
            return;
        }

        if (!newItem.isEmpty()) {

            model.remove(index);
            model.add(index, newItem);
            
            list.remove(index);
            list.add(newItem);
            
            saveUser();
        }
    }//GEN-LAST:event_editPCUnfinishedActionPerformed

    private void editNintendoWishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editNintendoWishActionPerformed
        var selModel = nintendoWishList.getSelectionModel();
        int index = selModel.getMinSelectionIndex();
        
        var model = wishNintendoModel;
        var list = user.wishLists.nintendoList;

        if (index == -1) {
            return;
        }

        var item = model.getElementAt(index);
        var text = JOptionPane.showInputDialog("Edit Game Title", item);
        String newItem;

        if (text != null) {
            newItem = text.trim();
        } else {
            return;
        }

        if (!newItem.isEmpty()) {

            model.remove(index);
            model.add(index, newItem);
            
            list.remove(index);
            list.add(newItem);
            
            saveUser();
        }
    }//GEN-LAST:event_editNintendoWishActionPerformed

    private void editPlaystationWishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPlaystationWishActionPerformed
        var selModel = playstationWishList.getSelectionModel();
        int index = selModel.getMinSelectionIndex();
        
        var model = wishPlaystationModel;
        var list = user.wishLists.playstationList;

        if (index == -1) {
            return;
        }

        var item = model.getElementAt(index);
        var text = JOptionPane.showInputDialog("Edit Game Title", item);
        String newItem;

        if (text != null) {
            newItem = text.trim();
        } else {
            return;
        }

        if (!newItem.isEmpty()) {

            model.remove(index);
            model.add(index, newItem);
            
            list.remove(index);
            list.add(newItem);
            
            saveUser();
        }
    }//GEN-LAST:event_editPlaystationWishActionPerformed

    private void editXboxWishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editXboxWishActionPerformed
        var selModel = xboxWishList.getSelectionModel();
        int index = selModel.getMinSelectionIndex();
        
        var model = wishXboxModel;
        var list = user.wishLists.xboxList;

        if (index == -1) {
            return;
        }

        var item = model.getElementAt(index);
        var text = JOptionPane.showInputDialog("Edit Game Title", item);
        String newItem;

        if (text != null) {
            newItem = text.trim();
        } else {
            return;
        }

        if (!newItem.isEmpty()) {

            model.remove(index);
            model.add(index, newItem);
            
            list.remove(index);
            list.add(newItem);
            
            saveUser();
        }
    }//GEN-LAST:event_editXboxWishActionPerformed

    private void editPCWishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPCWishActionPerformed
        var selModel = pcWishList.getSelectionModel();
        int index = selModel.getMinSelectionIndex();
        
        var model = wishPcModel;
        var list = user.wishLists.pcList;

        if (index == -1) {
            return;
        }

        var item = model.getElementAt(index);
        var text = JOptionPane.showInputDialog("Edit Game Title", item);
        String newItem;

        if (text != null) {
            newItem = text.trim();
        } else {
            return;
        }

        if (!newItem.isEmpty()) {

            model.remove(index);
            model.add(index, newItem);
            
            list.remove(index);
            list.add(newItem);
            
            saveUser();
        }
    }//GEN-LAST:event_editPCWishActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameLibFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameLibFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameLibFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameLibFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameLibFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton addNintendoFinished;
    private javax.swing.JButton addNintendoFull;
    private javax.swing.JButton addNintendoUnfinished;
    private javax.swing.JButton addNintendoWish;
    private javax.swing.JButton addPCFinished;
    private javax.swing.JButton addPCFull;
    private javax.swing.JButton addPCUnfinished;
    private javax.swing.JButton addPCWish;
    private javax.swing.JButton addPlaystationFinished;
    private javax.swing.JButton addPlaystationFull;
    private javax.swing.JButton addPlaystationUnfinished;
    private javax.swing.JButton addPlaystationWish;
    private javax.swing.JButton addXboxFinished;
    private javax.swing.JButton addXboxFull;
    private javax.swing.JButton addXboxUnfinished;
    private javax.swing.JButton addXboxWish;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JButton editNintendoFinished;
    private javax.swing.JButton editNintendoFull;
    private javax.swing.JButton editNintendoUnfinished;
    private javax.swing.JButton editNintendoWish;
    private javax.swing.JButton editPCFinished;
    private javax.swing.JButton editPCFull;
    private javax.swing.JButton editPCUnfinished;
    private javax.swing.JButton editPCWish;
    private javax.swing.JButton editPlaystationFinished;
    private javax.swing.JButton editPlaystationFull;
    private javax.swing.JButton editPlaystationUnfinished;
    private javax.swing.JButton editPlaystationWish;
    private javax.swing.JButton editXboxFinished;
    private javax.swing.JButton editXboxFull;
    private javax.swing.JButton editXboxUnfinished;
    private javax.swing.JButton editXboxWish;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JPanel finishedContent;
    private javax.swing.JPanel fullLibraryContent;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTabbedPane listTabs;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private static javax.swing.JList<String> nintendoFinishedList;
    private javax.swing.JScrollPane nintendoFinishedListPane;
    private javax.swing.JPanel nintendoFinishedPanel;
    private static javax.swing.JList<String> nintendoFullList;
    private javax.swing.JScrollPane nintendoFullListPane;
    private javax.swing.JPanel nintendoFullPanel;
    private static javax.swing.JList<String> nintendoUnfinishedList;
    private javax.swing.JPanel nintendoUnfinishedPanel;
    private javax.swing.JScrollPane nintendoUnifnishedListPane;
    private static javax.swing.JList<String> nintendoWishList;
    private javax.swing.JScrollPane nintendoWishListPane;
    private javax.swing.JPanel nintendoWishPanel;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private static javax.swing.JList<String> pcFinishedList;
    private javax.swing.JScrollPane pcFinishedListPane;
    private javax.swing.JPanel pcFinishedPanel;
    private static javax.swing.JList<String> pcFullList;
    private javax.swing.JScrollPane pcFullListPane;
    private javax.swing.JPanel pcFullPanel;
    private static javax.swing.JList<String> pcUnfinishedList;
    private javax.swing.JScrollPane pcUnfinishedListPane;
    private javax.swing.JPanel pcUnfinishedPanel;
    private static javax.swing.JList<String> pcWishList;
    private javax.swing.JScrollPane pcWishListPane;
    private javax.swing.JPanel pcWishPanel;
    private static javax.swing.JList<String> playstationFinishedList;
    private javax.swing.JScrollPane playstationFinishedListPane;
    private javax.swing.JPanel playstationFinishedPanel;
    private static javax.swing.JList<String> playstationFullList;
    private javax.swing.JScrollPane playstationFullListPane;
    private javax.swing.JPanel playstationFullPanel;
    private static javax.swing.JList<String> playstationUnfinishedList;
    private javax.swing.JScrollPane playstationUnfinishedListPane;
    private javax.swing.JPanel playstationUnfinishedPanel;
    private static javax.swing.JList<String> playstationWishList;
    private javax.swing.JScrollPane playstationWishListPane;
    private javax.swing.JPanel playstationWishPanel;
    private javax.swing.JButton removeNintendoFinished;
    private javax.swing.JButton removeNintendoFull;
    private javax.swing.JButton removeNintendoUninished;
    private javax.swing.JButton removeNintendoWish;
    private javax.swing.JButton removePCFinished;
    private javax.swing.JButton removePCFull;
    private javax.swing.JButton removePCUnfinished;
    private javax.swing.JButton removePCWish;
    private javax.swing.JButton removePlaystationFinished;
    private javax.swing.JButton removePlaystationFull;
    private javax.swing.JButton removePlaystationUnfinished;
    private javax.swing.JButton removePlaystationWish;
    private javax.swing.JButton removeXboxFinished;
    private javax.swing.JButton removeXboxFull;
    private javax.swing.JButton removeXboxUnfinished;
    private javax.swing.JButton removeXboxWish;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JPanel statsContent;
    private javax.swing.JPanel unfinishedContent;
    private javax.swing.JPanel wishListContent;
    private static javax.swing.JList<String> xboxFinishedList;
    private javax.swing.JScrollPane xboxFinishedListPane;
    private javax.swing.JPanel xboxFinishedPanel;
    private static javax.swing.JList<String> xboxFullList;
    private javax.swing.JScrollPane xboxFullListPane;
    private javax.swing.JPanel xboxFullPanel;
    private static javax.swing.JList<String> xboxUnfinishedList;
    private javax.swing.JScrollPane xboxUnfinishedListPane;
    private javax.swing.JPanel xboxUnfinishedPanel;
    private static javax.swing.JList<String> xboxWishList;
    private javax.swing.JScrollPane xboxWishListPane;
    private javax.swing.JPanel xboxWishPanel;
    // End of variables declaration//GEN-END:variables

}
